/*
Центрирование в области просмотра
Правило 'margin-right: -50%' необходимо для компенсации 'left: 50%'. 
Правило 'left' уменьшает доступную для элемента ширину на 50%. 
Поэтому визуализатор постарается сделать линии длиною не более половины ширины контейнера. 
Указав на то, что правое поле элемента находится правее на ту же самую величину,
 отметим, что максимальная длина линии снова равняется ширине контейнера.

Попробуйте изменить размер окна: вы увидите,
что каждое предложение находится на одной строке,
когда окно достаточно широкое.
Только тогда, когда окно слишком узкое для всего предложения,
это предложение будет разбито на несколько строк. 
Когда вы удалите правило 'margin-right: -50%' и снова измените размер окна,
вы заметите, что предложения будут уже разбиты,
 хотя окно все еще шире строк текста в два раза.
*/
.center {
  position: absolute;
        top: 50%;
        left: 50%;
        margin-right: -50%;
        transform: translate(-50%, -50%);
}
/*
Центрирование по вертикали
Основные правила:
1. Сделайте контейнер относительно позиционированным (position: relative), 
  что превратит его в контейнер для абсолютно позиционированных элементов.
2. Сам элемент сделайте абсолютно позиционированным (position: absolute).
3. Поместите элемент посередине контейнера с помощью 'top: 50%'. 
  (Заметьте, что '50%' здесь означают 50% высоты контейнера.)
4. Используйте translate, чтобы переместить элемент вверх 
  на половину своей собственной высоты. ( '50%' в 'translate(0, -50%)' указывают на высоту самого элемента.)
*/
div.container3 {
  height: 10em;
  position: relative; /* 1 */
}              
div.container3 p {
  margin: 0;
  position: absolute;               /* 2 */
  top: 50%;                         /* 3 */
  transform: translate(0, -50%);     /* 4 */
}   

/*Центрирование по вертикали FLEX*/
div.container5 {
  height: 10em;
  display: flex;
  align-items: center ;
}
div.container5 p {
  margin: 0; 
}
/*ВЕРТИКАЛЬНОЕ И ГОРИЗОНТАЛЬНОЕ ЦЕНТРИРОВАНИЕ В CSS УРОВНЯ 3*/
div.container4 {
  height: 10em;
  position: relative }
div.container4 p {
  margin: 0;
  background: yellow;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-right: -50%;
  transform: translate(-50%, -50%) }
  /*FLEX*/
  div.container6 {
    height: 10em;
    display: flex;
    align-items: center;
    justify-content: center }
  div.container6 p {
    margin: 0 }